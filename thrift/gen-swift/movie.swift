/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

import Foundation

import Thrift


public final class TMDBMovie {

  public var adult: Bool

  public var backdropPath: String

  public var budget: Int32

  public var genres: TList<TMDBMovieGenre>

  public var homepage: String

  public var id: Int32

  public var imdbID: String

  public var originalLanguage: String

  public var originalTitle: String

  public var overview: String

  public var popularity: Double

  public var posterPath: String?

  public var productionCompanies: TList<TMDBMovieProductionCompany>

  public var productionCountries: TList<TMDBMovieProductionCountry>

  public var releaseDate: String

  public var revenue: Int32

  public var runtime: Int32

  public var spokenLanguages: TList<TMDBMovieSpokenLanguage>

  public var status: String

  public var tagline: String

  public var title: String

  public var video: Bool

  public var voteAverage: Double

  public var voteCount: Int32


  public init(adult: Bool, backdropPath: String, budget: Int32, genres: TList<TMDBMovieGenre>, homepage: String, id: Int32, imdbID: String, originalLanguage: String, originalTitle: String, overview: String, popularity: Double, productionCompanies: TList<TMDBMovieProductionCompany>, productionCountries: TList<TMDBMovieProductionCountry>, releaseDate: String, revenue: Int32, runtime: Int32, spokenLanguages: TList<TMDBMovieSpokenLanguage>, status: String, tagline: String, title: String, video: Bool, voteAverage: Double, voteCount: Int32) {
    self.adult = adult
    self.backdropPath = backdropPath
    self.budget = budget
    self.genres = genres
    self.homepage = homepage
    self.id = id
    self.imdbID = imdbID
    self.originalLanguage = originalLanguage
    self.originalTitle = originalTitle
    self.overview = overview
    self.popularity = popularity
    self.productionCompanies = productionCompanies
    self.productionCountries = productionCountries
    self.releaseDate = releaseDate
    self.revenue = revenue
    self.runtime = runtime
    self.spokenLanguages = spokenLanguages
    self.status = status
    self.tagline = tagline
    self.title = title
    self.video = video
    self.voteAverage = voteAverage
    self.voteCount = voteCount
  }

  public init(adult: Bool, backdropPath: String, budget: Int32, genres: TList<TMDBMovieGenre>, homepage: String, id: Int32, imdbID: String, originalLanguage: String, originalTitle: String, overview: String, popularity: Double, posterPath: String?, productionCompanies: TList<TMDBMovieProductionCompany>, productionCountries: TList<TMDBMovieProductionCountry>, releaseDate: String, revenue: Int32, runtime: Int32, spokenLanguages: TList<TMDBMovieSpokenLanguage>, status: String, tagline: String, title: String, video: Bool, voteAverage: Double, voteCount: Int32) {
    self.adult = adult
    self.backdropPath = backdropPath
    self.budget = budget
    self.genres = genres
    self.homepage = homepage
    self.id = id
    self.imdbID = imdbID
    self.originalLanguage = originalLanguage
    self.originalTitle = originalTitle
    self.overview = overview
    self.popularity = popularity
    self.posterPath = posterPath
    self.productionCompanies = productionCompanies
    self.productionCountries = productionCountries
    self.releaseDate = releaseDate
    self.revenue = revenue
    self.runtime = runtime
    self.spokenLanguages = spokenLanguages
    self.status = status
    self.tagline = tagline
    self.title = title
    self.video = video
    self.voteAverage = voteAverage
    self.voteCount = voteCount
  }

}

public final class TMDBMovieGenre {

  public var id: Int32

  public var name: String


  public init(id: Int32, name: String) {
    self.id = id
    self.name = name
  }

}

public final class TMDBMovieProductionCompany {

  public var id: Int32

  public var logoPath: String?

  public var name: String

  public var originCountry: String


  public init(id: Int32, name: String, originCountry: String) {
    self.id = id
    self.name = name
    self.originCountry = originCountry
  }

  public init(id: Int32, logoPath: String?, name: String, originCountry: String) {
    self.id = id
    self.logoPath = logoPath
    self.name = name
    self.originCountry = originCountry
  }

}

public final class TMDBMovieProductionCountry {

  public var iso3166_1: String

  public var name: String


  public init(iso3166_1: String, name: String) {
    self.iso3166_1 = iso3166_1
    self.name = name
  }

}

public final class TMDBMovieSpokenLanguage {

  public var iso639_1: String

  public var name: String


  public init(iso639_1: String, name: String) {
    self.iso639_1 = iso639_1
    self.name = name
  }

}

public final class TMDBMovieError : Swift.Error {

  public var code: Int32

  public var message: String


  public init(code: Int32, message: String) {
    self.code = code
    self.message = message
  }

}

public final class TMDBGetDetailsRequest {

  public var id: Int32

  public var apiKey: String

  public var language: String?


  public init(id: Int32, apiKey: String) {
    self.id = id
    self.apiKey = apiKey
  }

  public init(id: Int32, apiKey: String, language: String?) {
    self.id = id
    self.apiKey = apiKey
    self.language = language
  }

}

public protocol MovieService {

  ///
  /// - Parameters:
  ///   - req: 
  /// - Returns: TMDBMovie
  /// - Throws: TMDBMovieError
  func getDetails(req: TMDBGetDetailsRequest) throws -> TMDBMovie

}

open class MovieServiceClient : TClient /* , MovieService */ {

}

open class MovieServiceProcessor /* MovieService */ {

  typealias ProcessorHandlerDictionary = [String: (Int32, TProtocol, TProtocol, MovieService) throws -> Void]

  public var service: MovieService

  public required init(service: MovieService) {
    self.service = service
  }

}


